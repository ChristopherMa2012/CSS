

一、min-width、max-width、min-height、max-height
       固定宽度布局：无论显示器的尺寸是多少，均以网页设计时的大小显示元素内容。
           流式布局：在小屏幕上会自动收缩调整网页大小，破坏原来的设计；
                     在大屏幕上则会放大网页，元素会变得很大而降低阅读感受。
                     
   *   min-width:100px--- 窗口收缩时，网页内容宽度最小会收缩到100px便不会再缩小，倘若窗口继续收缩，则会出现滚动条，页面大小不变
                          窗口放大时，网页内容宽度则会随着窗口扩充而变大，并且没有限制。
   *   max-width:100px--- 窗口收缩时，网页内容宽度会无限制缩小，并且没有下限。
                          窗口放大时，网页内容宽度最大只能扩充到100px,到100px之后，即使窗口再变大，网页内容宽度也不会再改变。
   *   min-height和max-height的原理和width的雷同。

        注：网页布局时一般使用min-width和max-width组合，以此来构建弹性更好的网页。例如：
               body{
                 min-width:760px;
                 max-width:1300px;
               }            //网页最小展示宽度为760px,最大展示宽度为1300px;

----------------------------------------------------------------------------------
 二、Clear

          在设计基于浮动的列时，有时候并不想让内容上移到接近浮动元素的位置。例如，通常是让版权提示、联系纤细或者其他琐碎的细节
      保持在网页的底部，位于所有其他内容的下方。这时在内容元素设置clear:all或clear:left或clear:right.
---------------------------------------------------------------------------------------------

 三、position： absolute、relative、fixed、static

      相对定位：与绝对定位不同的是，其他网页元素不会占据相对定位元素原来在HTML中的位置。相对定位的元素发生移动之后，在该
                元素原来的位置上就会留下一个“窟窿”。相对定位最大好处不是移动元素，而是给它内部的绝对定位元素设定一个新的
                参照点。相对定位是让元素相对于它在网页上的默认位置进行定位i，并在元素未进行相对定位之前所处的位置上留下
                一个窟窿。当你对一个标签设置relative定位时，它的意思就是“我内部的所有定位元素都应该相对于我的位置进行定位”。
               与此同时，该标签也可设置top、right、bottom、left等属性，一旦定义了这些属性，该标签就会从它正常在HTML流中
               应该显示的位置上移设定的距离值。并且在原来默认的位置上留下一个大窟窿。


绝对定位: 绝对定位的元素实际上是被相对地放在了离它最近的定位祖先元素的边界上。简单地说，如果已经用绝对定位创建了一个元素
         （假设是一个<div>标签，显示在离浏览器窗口顶部往下100px处），那么HTML在这个<div>标签里面的绝对定位元素将都是相对
         于这个div的上、下、左、右进行定位。

----------------------------------------------------------------------------------------------
  四、column 主要属性（2015年10月）
       * 根据测试，以下属性在使用时并不需要强制设定文本所在容器的高度或者宽度才能使用。

          column-count ： 分栏数目。最新版的webkit内核浏览器和火狐浏览器均不直接支持，webkit需要添加-webkit-前缀，
                           火狐需要添加-moz-。
                          而微软的EDGE和IE 11均能直接支持，但6-9则不支持。
                          
          column-width:   根据窗口大小自动调整分栏数目。单位一般使用 rem 。支持情况与column-count相同。
          column-rule:    分栏间分割线的样式，设置方式与border相同。
          colunm-gap:     分割线两侧的间距。
          column-fill：   值：auto，balance。
          column-span:    目标元素的跨栏显示。值：1和all。但目前webkit内核浏览器和火狐浏览器都暂未支持。

      * 为避免标题和正文出现在两个栏，必须告诉浏览器你想要在哪里开始分栏：
              break-before:  auto
                             always
                             avoid
                             column                在目标元素前分栏
                             avoid-column    不允许在目标元素前分栏
       
              break-after:   auto
                             always
                             avoid
                             column                在目标元素后分栏
                             avoid-column    不允许在目标元素后分栏
       
              break-inside:  auto
                             always
                             avoid
                             column
                             avoid-column

---------------------------------------------------------------------------------------
 
 五、background

    background-image: url()    --   // 文档的路径有三种表示方法：绝对路径、相对于文档的路径、相对于根目录的路径。
                                        url(../images/bg.gif)  /*相对于文档的路径*/
                                        url(/images/bg.gif)    /*相对于根目录的路径*/ 相对于网站的一级文件，
                                                                即绝对路径去掉http://和主机名，用/代表根目录

                                       相对于文档的路径是指相对于样式表文件，而不是相对于要设置样式的HTML网页。但
                                       如果使用的是内部样式表，那么这两个路径指的是同一个路径。
                                        ../     是指“到上一级目录” （也就是说，到包含styles文件夹的那个文件夹）；
                                        images/ 意思是“到images文件夹”；

    background-repeat:   repeat    //默认设置，平铺整个元素空间
                         no-repeat  //只显示图片一次，不会平铺或重复
                         repeat-x   //顺着x轴水平重复图片
                         repeat-y   //顺着y轴垂直重复图片

    background-position: 水平方向left、center、right
                         垂直方向top、center、bottom
                         作用；定义图片的初始位置


    background-attachment:  fixed    //固定图片在窗口中的位置，不会因网页的拖动而移动位置。

        注：background的快捷设置--
                   background：color，image，attachment，position。

-------------------------------------------------------------------------------------------------------
六、选择器

    1、元素选择器 ：         E {}
    2、属性选择器：          E[attr] {}
    3、ID选择器：            #selector {}
    4、CLASS选择器：         .class{}
    5、包含选择器：          selector1 selector2 {}  //在selector1元素内的元素selector2，并不一定是子元素，可以是孙子元素。
    6、子选择器：            selector1>selector2 {}  //selector1元素的子元素selector2.必须是子元素。
    7、兄弟选择器（新增）：  selector1~selector2 {}  //匹配selector1后面的、selector2兄弟元素。

    8、伪元素选择器：        ：first-letter   //指定对象内的第一个字符
                             ：first-line     //指定对象内的第一行内容起作用
                             ：before         //指定对象的内部前端
                             ：after          //指定对象的内部尾端

    9、伪类选择器：（伪类前的selector可以省略使用，省略后selector不再作为匹配条件）

             新增的特殊的：
                             selector：target              //匹配符合selector选择器且必须是命名锚点目标的元素
                             selector1：not(selector2)     //匹配符合selector1选择器，但不符合selector2选择器的元素，
                                                             相当于用selector1减去selector2.

         结构性伪类选择器：
                             selector：root                //匹配文档的根元素。html文档中根元素永远是<html>
                             selector：first-child         //匹配selector选择器的父元素的 第一个子节点元素。
                             selector：last-child          //匹配selector选择器的父元素的 最后一个子节点元素。
                             selector：nth-child(n)        //匹配selector选择器的父元素的 第n个子节点元素。
                             selector：nth-last-child(n)   //匹配selector选择器的父元素的 倒数第n个子节点元素
                             selector：only-child          //匹配selector选择器的父元素的 唯一的子节点元素。

                             selector：first-of-type       //匹配与selector选择器同级、同类型的兄弟节点中的 第一个元素
                             selector：last-of-type        //匹配与selector选择器同级、同类型的兄弟节点中的 最后一个元素
                             selector: nth-of-type(n)      //匹配与selector选择器同级、同类型的兄弟节点中的 第n个元素
                             selector: nth-last-of-type(n) //匹配与selector选择器同级、同类型的兄弟节点中的 倒数第n个元素
                             selector: only-of-type(n)     //匹配与selector选择器同级、同类型的兄弟节点中   唯一的一个元素

                             selector：empty               //匹配复合selector选择器且其内部没有任何子元素的元素。
     UI元素状态伪类选择器：
                             selector：link                 //匹配selector选择器且未被访问的元素。（通常只能是超链接）
                             selector：visited              //匹配selector选择器且已被访问过的元素（通常只能是超链接）
                             selector：active               //匹配selector选择器且处于被用户激活的元素（鼠标点击与释放之间）
                                                              状态的元素
                             selector：hover                //匹配selector选择器且处于鼠标悬停状态的元素
                             selector：focus                //匹配selector选择器且已得到焦点的元素
                             selector：enabled              //匹配selector选择器且当前处于可用状态的元素
                             selector：disabled             //匹配selector选择器且当前处于不可用状态的元素
                             selector: checked              //匹配selector选择器且当前处于选中状态的元素。
                             selector：default              //匹配selector选择器且页面打开时处于选中状态的（即使当前未被选中）
                                                              的元素
                             selector；read-only            //匹配selector选择器且处于只读状态的元素
                             selector；read-write           //匹配selector选择器且处于读写状态的元素
                             selector；；selection          //匹配selector选择器的元素中当前被选中的内容
 
